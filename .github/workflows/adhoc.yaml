name: Deploy adhoc

on:
  pull_request:

jobs:
  build:
    name: Build application
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: Set deployment name as NAME
        id: deployment_name
        run: |
          BRANCH_NAME=$(echo "${GITHUB_HEAD_REF#refs/heads/}" | sed 's/\//-/g')
          echo "name=$BRANCH_NAME" >> $GITHUB_OUTPUT

      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js v20.9.0
        uses: actions/setup-node@v4
        with:
          node-version: '20.9.0'
          registry-url: 'https://npm.pkg.github.com'

      - name: Cache node modules
        id: cache-node
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        if: steps.cache-node.outputs.cache-hit != 'true'
        run: npm ci
        env:
          NODE_AUTH_TOKEN: ${{ secrets.READER_TOKEN }}

      - name: Fetch openapi backend types
        run: npx openapi-typescript 'https://staging.ekstern.dev.nav.no/pensjon/kalkulator/v3/api-docs/current' -o ./src/types/schema.d.ts

      - name: Format backend scheme
        run: npm run format:types

      - name: Rebuild node-sass
        run: npm rebuild node-sass

      - name: Build staging application
        run: npm run build

      - name: Build backend for frontend
        run: npm run build:server

      - name: Create Docker image
        id: image-creation
        uses: nais/docker-build-push@v0
        with:
          dockerfile: .docker/Dockerfile
          team: pensjonskalkulator
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}
    outputs:
      image: ${{ steps.image-creation.outputs.image }}
      deployment_name: ${{ steps.deployment_name.outputs.name }}

  test-adhoc:
    name: Test adhoc
    needs: [build]
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
      - name: Print outputs
        run: echo ${{ needs.build.outputs.deployment_name }}

  deploy-adhoc:
    name: Deploy adhoc
    needs: [build]
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Deploy to adhoc
        uses: nais/deploy/actions/deploy@v2
        env:
          CLUSTER: dev-gcp
          RESOURCE: .nais/deploy-adhoc.yml
          VAR: deployment_name=${{ needs.build.outputs.deployment_name.name }},image=${{ needs.build.outputs.image }}
