/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/api/v8/alderspensjon/simulering': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /**
     * Simuler alderspensjon
     * @description Lag en prognose for framtidig alderspensjon med støtte for AFP i offentlig sektor. Feltet 'epsHarInntektOver2G' brukes til å angi hvorvidt ektefelle/partner/samboer har inntekt over 2 ganger grunnbeløpet. Dersom simulering med de angitte parametre resulterer i avslag i vilkårsprøvingen, vil responsen inneholde alternative parametre som vil gi et innvilget simuleringsresultat
     */
    post: operations['simulerAlderspensjonV8']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/v7/alderspensjon/simulering': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /**
     * Simuler alderspensjon
     * @description Lag en prognose for framtidig alderspensjon med støtte for AFP i offentlig sektor. Feltet 'epsHarInntektOver2G' brukes til å angi hvorvidt ektefelle/partner/samboer har inntekt over 2 ganger grunnbeløpet. Dersom simulering med de angitte parametre resulterer i avslag i vilkårsprøvingen, vil responsen inneholde alternative parametre som vil gi et innvilget simuleringsresultat
     */
    post: operations['simulerAlderspensjonV7']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/v3/pensjonsavtaler': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /**
     * Hent pensjonsavtaler (versjon 3)
     * @description Henter pensjonsavtalene til den innloggede/angitte brukeren. I request må verdi av 'maaneder' være 0..11.
     */
    post: operations['fetchAvtalerV3']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/v2/tidligste-hel-uttaksalder': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /**
     * Tidligst mulige uttaksalder ved helt uttak
     * @description Finn tidligst mulige uttaksalder for innlogget bruker ved helt (100 %) uttak.
     */
    post: operations['finnTidligsteHelUttaksalderV2']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/v2/pensjonsavtaler': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /**
     * Hent pensjonsavtaler (versjon 2)
     * @description Henter pensjonsavtalene til den innloggede/angitte brukeren. I request må verdi av 'maaneder' være 0..11.
     */
    post: operations['fetchAvtalerV2']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/v1/tidligste-hel-uttaksalder': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /**
     * Første mulige uttaksalder ved helt uttak
     * @description Finn første mulige uttaksalder for innlogget bruker ved helt (100 %) uttak. Feltet 'harEps' brukes til å angi om brukeren har ektefelle/partner/samboer eller ei
     */
    post: operations['finnTidligsteHelUttaksalderV1']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/v1/simuler-oftp': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /**
     * Simuler offentlig tjenestepensjon hos tp-leverandør bruker er medlem av
     * @description Simulerer offentlig tjenestepensjon hos tp-leverandør som har ansvar for brukers tjenestepensjon
     */
    post: operations['simulerOffentligTjenestepensjonV1']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/v1/encrypt': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /**
     * Krypter tekst
     * @description Krypterer angitt tekst (typisk brukstilfelle er for fødselsnumre)
     */
    post: operations['encrypt']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/v1/alderspensjon/anonym-simulering': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /**
     * Simuler alderspensjon anonymt (ikke innlogget)
     * @description Lag en prognose for framtidig alderspensjon med støtte for AFP i offentlig sektor. Feltet 'epsHarInntektOver2G' brukes til å angi hvorvidt ektefelle/partner/samboer har inntekt over 2 ganger grunnbeløpet. Dersom simulering med de angitte parametre resulterer i avslag i vilkårsprøvingen, vil responsen inneholde alternative parametre som vil gi et innvilget simuleringsresultat
     */
    post: operations['simulerAnonymAlderspensjonV1']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/v4/person': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Hent personinformasjon
     * @description Henter informasjon om personen hvis person-ID er angitt enten i bearer-tokenet eller som fnr-header.
     */
    get: operations['personV4']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/v2/vedtak/loepende-vedtak': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Har løpende vedtak
     * @description Hvorvidt den innloggede brukeren har løpende uføretrygd med uttaksgrad, alderspensjon med uttaksgrad, AFP i privat eller offentlig sektor
     */
    get: operations['hentLoependeVedtakV2']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/v2/person': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Hent personinformasjon
     * @description Henter informasjon om personen hvis person-ID er angitt enten i bearer-tokenet eller som fnr-header.
     */
    get: operations['personV2']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/v2/ekskludert': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Om personen er ekskludert fra å bruke kalkulatoren
     * @description Eksludering kan skyldes medlemskap i Apotekerforeningen
     */
    get: operations['erEkskludertV2']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/v1/vedtak/loepende-vedtak': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Har løpende vedtak
     * @description Hvorvidt den innloggede brukeren har løpende uføretrygd med uttaksgrad, alderspensjon med uttaksgrad, AFP i privat eller offentlig sektor
     */
    get: operations['hentLoependeVedtakV1']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/v1/ufoeregrad': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Hente gjeldende uføregrad
     * @description Hente gjeldende uføregrad fra løpende vedtak om uføretrygd om det finnes
     */
    get: operations['hentUfoeregrad']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/v1/tpo-medlemskap': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Hent medlemskap i offentlige tjenestepensjonsordninger
     * @description Henter både aktive og inaktive medlemskap til brukeren i offentlige tjenestepensjonsordninger
     */
    get: operations['hentMedlemskapITjenestepensjonsordninger']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/v1/loepende-omstillingsstoenad-eller-gjenlevendeytelse': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Mottar omstillingsstønad eller gjenlevende ytelse
     * @description Hvorvidt den innloggede brukeren mottar omstillingsstønad eller gjenlevende ytelse
     */
    get: operations['mottarOmstillingsstoenadEllerGjenlevendeYtelse']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/v1/land-liste': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Hent land-liste
     * @description Henter liste over land med navn og status som avtaleland. Denne tjenesten er åpen - krever ikke autentisering.
     */
    get: operations['landListe']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/v1/ekskludert': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Om personen er ekskludert fra å bruke kalkulatoren
     * @description Eksludering kan skyldes løpende uføretrygd, gjenlevendeytelse eller medlemskap i Apotekerforeningen
     */
    get: operations['erEkskludertV1']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/v1/ansatt-id': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Hent ansatt-ID
     * @description Henter informasjon som identifiserer den innloggede ansatte.
     */
    get: operations['ansattId']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/tpo-medlemskap': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Har offentlig tjenestepensjonsforhold
     * @description Hvorvidt den innloggede brukeren har offentlig tjenestepensjonsforhold
     */
    get: operations['harTjenestepensjonsforhold']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/status': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Sjekk status
     * @description Hent status for applikasjonens helsetilstand
     */
    get: operations['status']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/sak-status': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Har uføretrygd/gjenlevendeytelse
     * @description Hvorvidt den innloggede brukeren har løpende uføretrygd eller gjenlevendeytelse
     */
    get: operations['harRelevantSak']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/inntekt': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Siste pensjonsgivende inntekt
     * @description Henter den innloggede brukerens sist skattelignede pensjonsgivende inntekt
     */
    get: operations['sistePensjonsgivendeInntekt']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/feature/{name}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Hvorvidt en gitt funksjonsbryter er skrudd på
     * @description Hent status for en gitt funksjonsbryter (hvorvidt funksjonen er skrudd på)
     */
    get: operations['isEnabled']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
}
export type webhooks = Record<string, never>
export interface components {
  schemas: {
    PersonligSimuleringAlderSpecV8: {
      /** Format: int32 */
      aar: number
      /** Format: int32 */
      maaneder: number
    }
    PersonligSimuleringGradertUttakSpecV8: {
      /** Format: int32 */
      grad: number
      uttaksalder: components['schemas']['PersonligSimuleringAlderSpecV8']
      /** Format: int32 */
      aarligInntektVsaPensjonBeloep?: number
    }
    PersonligSimuleringHeltUttakSpecV8: {
      uttaksalder: components['schemas']['PersonligSimuleringAlderSpecV8']
      aarligInntektVsaPensjon?: components['schemas']['PersonligSimuleringInntektSpecV8']
    }
    PersonligSimuleringInntektSpecV8: {
      /** Format: int32 */
      beloep: number
      sluttAlder: components['schemas']['PersonligSimuleringAlderSpecV8']
    }
    PersonligSimuleringSpecV8: {
      /** @enum {string} */
      simuleringstype:
        | 'ALDERSPENSJON'
        | 'ALDERSPENSJON_MED_AFP_PRIVAT'
        | 'ALDERSPENSJON_MED_AFP_OFFENTLIG_LIVSVARIG'
        | 'ENDRING_ALDERSPENSJON'
        | 'ENDRING_ALDERSPENSJON_MED_AFP_PRIVAT'
      /** Format: date */
      foedselsdato: string
      /** Format: int32 */
      aarligInntektFoerUttakBeloep?: number
      gradertUttak?: components['schemas']['PersonligSimuleringGradertUttakSpecV8']
      heltUttak: components['schemas']['PersonligSimuleringHeltUttakSpecV8']
      utenlandsperiodeListe?: components['schemas']['PersonligSimuleringUtenlandsperiodeSpecV8'][]
      /** @enum {string} */
      sivilstand?:
        | 'UNKNOWN'
        | 'UOPPGITT'
        | 'UGIFT'
        | 'GIFT'
        | 'ENKE_ELLER_ENKEMANN'
        | 'SKILT'
        | 'SEPARERT'
        | 'REGISTRERT_PARTNER'
        | 'SEPARERT_PARTNER'
        | 'SKILT_PARTNER'
        | 'GJENLEVENDE_PARTNER'
        | 'SAMBOER'
      epsHarInntektOver2G: boolean
      epsHarPensjon: boolean
    }
    PersonligSimuleringUtenlandsperiodeSpecV8: {
      /** Format: date */
      fom: string
      /** Format: date */
      tom?: string
      landkode: string
      arbeidetUtenlands: boolean
    }
    PersonligSimuleringAarligInntektResultV8: {
      /** Format: int32 */
      aar: number
      /** Format: int32 */
      pensjonsgivendeInntektBeloep: number
    }
    PersonligSimuleringAarligPensjonResultV8: {
      /** Format: int32 */
      alder: number
      /** Format: int32 */
      beloep: number
    }
    PersonligSimuleringAlderResultV8: {
      /** Format: int32 */
      aar: number
      /** Format: int32 */
      maaneder: number
    }
    PersonligSimuleringAlderspensjonResultV8: {
      /** Format: int32 */
      alder: number
      /** Format: int32 */
      beloep: number
      /** Format: int32 */
      inntektspensjonBeloep?: number
      /** Format: int32 */
      garantipensjonBeloep?: number
      /** Format: double */
      delingstall?: number
      /** Format: int32 */
      pensjonBeholdningFoerUttakBeloep?: number
    }
    PersonligSimuleringAlternativResultV8: {
      gradertUttaksalder?: components['schemas']['PersonligSimuleringAlderResultV8']
      /** Format: int32 */
      uttaksgrad?: number
      heltUttaksalder: components['schemas']['PersonligSimuleringAlderResultV8']
    }
    PersonligSimuleringMaanedligPensjonResultV8: {
      /** Format: int32 */
      gradertUttakMaanedligBeloep?: number
      /** Format: int32 */
      heltUttakMaanedligBeloep: number
    }
    PersonligSimuleringResultV8: {
      alderspensjon: components['schemas']['PersonligSimuleringAlderspensjonResultV8'][]
      alderspensjonMaanedligVedEndring?: components['schemas']['PersonligSimuleringMaanedligPensjonResultV8']
      afpPrivat?: components['schemas']['PersonligSimuleringAarligPensjonResultV8'][]
      afpOffentlig?: components['schemas']['PersonligSimuleringAarligPensjonResultV8'][]
      vilkaarsproeving: components['schemas']['PersonligSimuleringVilkaarsproevingResultV8']
      harForLiteTrygdetid?: boolean
      /** Format: int32 */
      trygdetid?: number
      opptjeningGrunnlagListe?: components['schemas']['PersonligSimuleringAarligInntektResultV8'][]
    }
    PersonligSimuleringVilkaarsproevingResultV8: {
      vilkaarErOppfylt: boolean
      alternativ?: components['schemas']['PersonligSimuleringAlternativResultV8']
    }
    IngressSimuleringAlderV7: {
      /** Format: int32 */
      aar: number
      /** Format: int32 */
      maaneder: number
    }
    IngressSimuleringGradertUttakV7: {
      /** Format: int32 */
      grad: number
      uttaksalder: components['schemas']['IngressSimuleringAlderV7']
      /** Format: int32 */
      aarligInntektVsaPensjonBeloep?: number
    }
    IngressSimuleringHeltUttakV7: {
      uttaksalder: components['schemas']['IngressSimuleringAlderV7']
      aarligInntektVsaPensjon?: components['schemas']['IngressSimuleringInntektV7']
    }
    IngressSimuleringInntektV7: {
      /** Format: int32 */
      beloep: number
      sluttAlder: components['schemas']['IngressSimuleringAlderV7']
    }
    IngressSimuleringSpecV7: {
      /** @enum {string} */
      simuleringstype:
        | 'ALDERSPENSJON'
        | 'ALDERSPENSJON_MED_AFP_PRIVAT'
        | 'ALDERSPENSJON_MED_AFP_OFFENTLIG_LIVSVARIG'
        | 'ENDRING_ALDERSPENSJON'
        | 'ENDRING_ALDERSPENSJON_MED_AFP_PRIVAT'
      /** Format: date */
      foedselsdato: string
      epsHarInntektOver2G: boolean
      /** Format: int32 */
      aarligInntektFoerUttakBeloep?: number
      /** @enum {string} */
      sivilstand?:
        | 'UNKNOWN'
        | 'UOPPGITT'
        | 'UGIFT'
        | 'GIFT'
        | 'ENKE_ELLER_ENKEMANN'
        | 'SKILT'
        | 'SEPARERT'
        | 'REGISTRERT_PARTNER'
        | 'SEPARERT_PARTNER'
        | 'SKILT_PARTNER'
        | 'GJENLEVENDE_PARTNER'
        | 'SAMBOER'
      gradertUttak?: components['schemas']['IngressSimuleringGradertUttakV7']
      heltUttak: components['schemas']['IngressSimuleringHeltUttakV7']
      utenlandsperiodeListe?: components['schemas']['UtenlandsperiodeSpecV7'][]
    }
    UtenlandsperiodeSpecV7: {
      /** Format: date */
      fom: string
      /** Format: date */
      tom?: string
      landkode: string
      arbeidetUtenlands: boolean
    }
    AlderV7: {
      /** Format: int32 */
      aar: number
      /** Format: int32 */
      maaneder: number
    }
    AlderspensjonsMaanedligV7: {
      /** Format: int32 */
      gradertUttakMaanedligBeloep?: number
      /** Format: int32 */
      heltUttakMaanedligBeloep: number
    }
    AlderspensjonsberegningV7: {
      /** Format: int32 */
      alder: number
      /** Format: int32 */
      beloep: number
      /** Format: int32 */
      inntektspensjonBeloep?: number
      /** Format: int32 */
      garantipensjonBeloep?: number
      /** Format: double */
      delingstall?: number
      /** Format: int32 */
      pensjonBeholdningFoerUttakBeloep?: number
    }
    AlternativV7: {
      gradertUttaksalder?: components['schemas']['AlderV7']
      /** Format: int32 */
      uttaksgrad?: number
      heltUttaksalder: components['schemas']['AlderV7']
    }
    PensjonsberegningAfpOffentligV7: {
      /** Format: int32 */
      alder: number
      /** Format: int32 */
      beloep: number
    }
    PensjonsberegningV7: {
      /** Format: int32 */
      alder: number
      /** Format: int32 */
      beloep: number
    }
    SimuleringResultatV7: {
      alderspensjon: components['schemas']['AlderspensjonsberegningV7'][]
      alderspensjonMaanedligVedEndring?: components['schemas']['AlderspensjonsMaanedligV7']
      afpPrivat?: components['schemas']['PensjonsberegningV7'][]
      afpOffentlig?: components['schemas']['PensjonsberegningAfpOffentligV7'][]
      vilkaarsproeving: components['schemas']['VilkaarsproevingV7']
      harForLiteTrygdetid?: boolean
      /** Format: int32 */
      trygdetid?: number
      opptjeningGrunnlagListe?: components['schemas']['SimulertOpptjeningGrunnlagV7'][]
    }
    SimulertOpptjeningGrunnlagV7: {
      /** Format: int32 */
      aar: number
      /** Format: int32 */
      pensjonsgivendeInntektBeloep: number
    }
    VilkaarsproevingV7: {
      vilkaarErOppfylt: boolean
      alternativ?: components['schemas']['AlternativV7']
    }
    PensjonsavtaleAlderSpecV3: {
      /** Format: int32 */
      aar: number
      /** Format: int32 */
      maaneder: number
    }
    PensjonsavtaleInntektSpecV3: {
      /** Format: int32 */
      beloep: number
      sluttAlder?: components['schemas']['PensjonsavtaleAlderSpecV3']
    }
    PensjonsavtaleSpecV3: {
      /** Format: int32 */
      aarligInntektFoerUttakBeloep: number
      uttaksperioder: components['schemas']['PensjonsavtaleUttaksperiodeSpecV3'][]
      harAfp?: boolean
      /** @enum {string} */
      sivilstand?:
        | 'UNKNOWN'
        | 'UOPPGITT'
        | 'UGIFT'
        | 'GIFT'
        | 'ENKE_ELLER_ENKEMANN'
        | 'SKILT'
        | 'SEPARERT'
        | 'REGISTRERT_PARTNER'
        | 'SEPARERT_PARTNER'
        | 'SKILT_PARTNER'
        | 'GJENLEVENDE_PARTNER'
        | 'SAMBOER'
      epsHarInntektOver2G: boolean
      epsHarPensjon: boolean
    }
    PensjonsavtaleUttaksperiodeSpecV3: {
      startAlder: components['schemas']['PensjonsavtaleAlderSpecV3']
      /** Format: int32 */
      grad: number
      aarligInntektVsaPensjon?: components['schemas']['PensjonsavtaleInntektSpecV3']
    }
    Alder: {
      /** Format: int32 */
      aar: number
      /** Format: int32 */
      maaneder: number
    }
    PensjonsavtaleResultV3: {
      avtaler: components['schemas']['PensjonsavtaleV3'][]
      utilgjengeligeSelskap: components['schemas']['SelskapV3'][]
    }
    PensjonsavtaleV3: {
      produktbetegnelse: string
      /** @enum {string} */
      kategori: 'UNKNOWN' | 'INDIVIDUELL_ORDNING' | 'PRIVAT_TJENESTEPENSJON'
      /** Format: int32 */
      startAar: number
      /** Format: int32 */
      sluttAar?: number
      utbetalingsperioder: components['schemas']['UtbetalingsperiodeV3'][]
    }
    SelskapV3: {
      navn: string
      heltUtilgjengelig: boolean
    }
    UtbetalingsperiodeV3: {
      startAlder: components['schemas']['Alder']
      sluttAlder?: components['schemas']['Alder']
      /** Format: int32 */
      aarligUtbetaling: number
      /** Format: int32 */
      grad: number
    }
    UttaksalderAlderSpecV2: {
      /** Format: int32 */
      aar: number
      /** Format: int32 */
      maaneder: number
    }
    UttaksalderInntektSpecV2: {
      /** Format: int32 */
      beloep: number
      sluttAlder?: components['schemas']['UttaksalderAlderSpecV2']
    }
    UttaksalderSpecV2: {
      /** @enum {string} */
      simuleringstype?:
        | 'ALDERSPENSJON'
        | 'ALDERSPENSJON_MED_AFP_PRIVAT'
        | 'ALDERSPENSJON_MED_AFP_OFFENTLIG_LIVSVARIG'
        | 'ENDRING_ALDERSPENSJON'
        | 'ENDRING_ALDERSPENSJON_MED_AFP_PRIVAT'
      /** Format: int32 */
      aarligInntektFoerUttakBeloep?: number
      aarligInntektVsaPensjon?: components['schemas']['UttaksalderInntektSpecV2']
      utenlandsperiodeListe?: components['schemas']['UttaksalderUtenlandsperiodeSpecV2'][]
      /** @enum {string} */
      sivilstand?:
        | 'UNKNOWN'
        | 'UOPPGITT'
        | 'UGIFT'
        | 'GIFT'
        | 'ENKE_ELLER_ENKEMANN'
        | 'SKILT'
        | 'SEPARERT'
        | 'REGISTRERT_PARTNER'
        | 'SEPARERT_PARTNER'
        | 'SKILT_PARTNER'
        | 'GJENLEVENDE_PARTNER'
        | 'SAMBOER'
      epsHarInntektOver2G: boolean
      epsHarPensjon: boolean
    }
    UttaksalderUtenlandsperiodeSpecV2: {
      /** Format: date */
      fom: string
      /** Format: date */
      tom?: string
      landkode: string
      arbeidetUtenlands: boolean
    }
    UttaksalderResultV2: {
      /** Format: int32 */
      aar: number
      /** Format: int32 */
      maaneder: number
    }
    PensjonsavtaleAlderSpecV2: {
      /** Format: int32 */
      aar: number
      /** Format: int32 */
      maaneder: number
    }
    PensjonsavtaleInntektSpecV2: {
      /** Format: int32 */
      beloep: number
      sluttAlder?: components['schemas']['PensjonsavtaleAlderSpecV2']
    }
    PensjonsavtaleOppholdSpecV2: {
      /** Format: date */
      fom: string
      /** Format: date */
      tom?: string
    }
    PensjonsavtaleSpecV2: {
      /** Format: int32 */
      aarligInntektFoerUttakBeloep: number
      uttaksperioder: components['schemas']['PensjonsavtaleUttaksperiodeSpecV2'][]
      harAfp?: boolean
      harEpsPensjon?: boolean
      harEpsPensjonsgivendeInntektOver2G?: boolean
      /** Format: int32 */
      antallAarIUtlandetEtter16?: number
      utenlandsperioder?: components['schemas']['PensjonsavtaleOppholdSpecV2'][]
      /** @enum {string} */
      sivilstand?:
        | 'UNKNOWN'
        | 'UOPPGITT'
        | 'UGIFT'
        | 'GIFT'
        | 'ENKE_ELLER_ENKEMANN'
        | 'SKILT'
        | 'SEPARERT'
        | 'REGISTRERT_PARTNER'
        | 'SEPARERT_PARTNER'
        | 'SKILT_PARTNER'
        | 'GJENLEVENDE_PARTNER'
        | 'SAMBOER'
    }
    PensjonsavtaleUttaksperiodeSpecV2: {
      startAlder: components['schemas']['PensjonsavtaleAlderSpecV2']
      /** Format: int32 */
      grad: number
      aarligInntektVsaPensjon?: components['schemas']['PensjonsavtaleInntektSpecV2']
    }
    PensjonsavtaleResultV2: {
      avtaler: components['schemas']['PensjonsavtaleV2'][]
      utilgjengeligeSelskap: components['schemas']['SelskapV2'][]
    }
    PensjonsavtaleV2: {
      produktbetegnelse: string
      /** @enum {string} */
      kategori: 'UNKNOWN' | 'INDIVIDUELL_ORDNING' | 'PRIVAT_TJENESTEPENSJON'
      /** Format: int32 */
      startAar: number
      /** Format: int32 */
      sluttAar?: number
      utbetalingsperioder: components['schemas']['UtbetalingsperiodeV2'][]
    }
    SelskapV2: {
      navn: string
      heltUtilgjengelig: boolean
    }
    UtbetalingsperiodeV2: {
      startAlder: components['schemas']['Alder']
      sluttAlder?: components['schemas']['Alder']
      /** Format: int32 */
      aarligUtbetaling: number
      /** Format: int32 */
      grad: number
    }
    IngressUttaksalderAlderV1: {
      /** Format: int32 */
      aar: number
      /** Format: int32 */
      maaneder: number
    }
    IngressUttaksalderInntektV1: {
      /** Format: int32 */
      beloep: number
      sluttAlder?: components['schemas']['IngressUttaksalderAlderV1']
    }
    IngressUttaksalderSpecForHeltUttakV1: {
      /** @enum {string} */
      simuleringstype?:
        | 'ALDERSPENSJON'
        | 'ALDERSPENSJON_MED_AFP_PRIVAT'
        | 'ALDERSPENSJON_MED_AFP_OFFENTLIG_LIVSVARIG'
        | 'ENDRING_ALDERSPENSJON'
        | 'ENDRING_ALDERSPENSJON_MED_AFP_PRIVAT'
      /** @enum {string} */
      sivilstand?:
        | 'UNKNOWN'
        | 'UOPPGITT'
        | 'UGIFT'
        | 'GIFT'
        | 'ENKE_ELLER_ENKEMANN'
        | 'SKILT'
        | 'SEPARERT'
        | 'REGISTRERT_PARTNER'
        | 'SEPARERT_PARTNER'
        | 'SKILT_PARTNER'
        | 'GJENLEVENDE_PARTNER'
        | 'SAMBOER'
      harEps?: boolean
      /** Format: int32 */
      aarligInntektFoerUttakBeloep?: number
      aarligInntektVsaPensjon?: components['schemas']['IngressUttaksalderInntektV1']
      utenlandsperiodeListe?: components['schemas']['UttaksalderUtenlandsperiodeSpecV1'][]
    }
    UttaksalderUtenlandsperiodeSpecV1: {
      /** Format: date */
      fom: string
      /** Format: date */
      tom?: string
      landkode: string
      arbeidetUtenlands: boolean
    }
    AlderDto: {
      /** Format: int32 */
      aar: number
      /** Format: int32 */
      maaneder: number
    }
    IngressSimuleringOffentligTjenestepensjonSpecV1: {
      /** Format: date */
      foedselsdato: string
      uttaksalder: components['schemas']['Alder']
      /** Format: int32 */
      aarligInntektFoerUttakBeloep: number
      utenlandsperiodeListe: components['schemas']['UtenlandsoppholdV1'][]
      epsHarPensjon: boolean
      epsHarInntektOver2G: boolean
      brukerBaOmAfp: boolean
    }
    UtenlandsoppholdV1: {
      /** Format: date */
      fom: string
      /** Format: date */
      tom?: string
    }
    OffentligTjenestepensjonSimuleringsresultatDtoV1: {
      /** @enum {string} */
      simuleringsresultatStatus:
        | 'OK'
        | 'BRUKER_ER_IKKE_MEDLEM_AV_TP_ORDNING'
        | 'TP_ORDNING_STOETTES_IKKE'
        | 'TOM_SIMULERING_FRA_TP_ORDNING'
        | 'TEKNISK_FEIL'
      muligeTpLeverandoerListe: string[]
      simulertTjenestepensjon?: components['schemas']['SimulertTjenestepensjonV1']
    }
    SimuleringsresultatV1: {
      utbetalingsperioder: components['schemas']['UtbetalingsperiodeV1'][]
      betingetTjenestepensjonErInkludert: boolean
    }
    SimulertTjenestepensjonV1: {
      tpLeverandoer: string
      simuleringsresultat: components['schemas']['SimuleringsresultatV1']
    }
    UtbetalingsperiodeV1: {
      startAlder: components['schemas']['Alder']
      sluttAlder?: components['schemas']['Alder']
      /** Format: int32 */
      aarligUtbetaling: number
    }
    AnonymSimuleringAlderV1: {
      /** Format: int32 */
      aar: number
      /** Format: int32 */
      maaneder: number
    }
    AnonymSimuleringGradertUttakV1: {
      /** Format: int32 */
      grad: number
      uttaksalder: components['schemas']['AnonymSimuleringAlderV1']
      /** Format: int32 */
      aarligInntektVsaPensjonBeloep?: number
    }
    AnonymSimuleringHeltUttakV1: {
      uttaksalder: components['schemas']['AnonymSimuleringAlderV1']
      aarligInntektVsaPensjon?: components['schemas']['AnonymSimuleringInntektV1']
    }
    AnonymSimuleringInntektV1: {
      /** Format: int32 */
      beloep: number
      sluttAlder?: components['schemas']['AnonymSimuleringAlderV1']
    }
    AnonymSimuleringSpecV1: {
      /** @enum {string} */
      simuleringstype?: 'ALDERSPENSJON' | 'ALDERSPENSJON_MED_AFP_PRIVAT'
      /** Format: int32 */
      foedselAar: number
      /** @enum {string} */
      sivilstand?: 'UGIFT' | 'GIFT' | 'SAMBOER'
      epsHarInntektOver2G?: boolean
      epsHarPensjon?: boolean
      /** Format: int32 */
      utenlandsAntallAar?: number
      /** Format: int32 */
      inntektOver1GAntallAar?: number
      /** Format: int32 */
      aarligInntektFoerUttakBeloep?: number
      gradertUttak?: components['schemas']['AnonymSimuleringGradertUttakV1']
      heltUttak: components['schemas']['AnonymSimuleringHeltUttakV1']
    }
    AnonymSimuleringErrorV1: {
      status: string
      message: string
    }
    AnonymAlderV1: {
      /** Format: int32 */
      aar: number
      /** Format: int32 */
      maaneder: number
    }
    AnonymAlternativV1: {
      gradertUttaksalder?: components['schemas']['AnonymAlderV1']
      /** Format: int32 */
      uttaksgrad?: number
      heltUttaksalder: components['schemas']['AnonymAlderV1']
    }
    AnonymPensjonsberegningAfpOffentligV1: {
      /** Format: int32 */
      alder: number
      /** Format: int32 */
      beloep: number
    }
    AnonymPensjonsberegningV1: {
      /** Format: int32 */
      alder: number
      /** Format: int32 */
      beloep: number
    }
    AnonymSimuleringResultV1: {
      alderspensjon: components['schemas']['AnonymPensjonsberegningV1'][]
      afpPrivat?: components['schemas']['AnonymPensjonsberegningV1'][]
      afpOffentlig?: components['schemas']['AnonymPensjonsberegningAfpOffentligV1'][]
      vilkaarsproeving: components['schemas']['AnonymVilkaarsproevingV1']
    }
    AnonymVilkaarsproevingV1: {
      vilkaarErOppfylt: boolean
      alternativ?: components['schemas']['AnonymAlternativV1']
    }
    PersonAlderV4: {
      /** Format: int32 */
      aar: number
      /** Format: int32 */
      maaneder: number
    }
    PersonPensjoneringAldreV4: {
      normertPensjoneringsalder: components['schemas']['PersonAlderV4']
      nedreAldersgrense: components['schemas']['PersonAlderV4']
    }
    PersonResultV4: {
      navn: string
      /** Format: date */
      foedselsdato: string
      /** @enum {string} */
      sivilstand:
        | 'UNKNOWN'
        | 'UOPPGITT'
        | 'UGIFT'
        | 'GIFT'
        | 'ENKE_ELLER_ENKEMANN'
        | 'SKILT'
        | 'SEPARERT'
        | 'REGISTRERT_PARTNER'
        | 'SEPARERT_PARTNER'
        | 'SKILT_PARTNER'
        | 'GJENLEVENDE_PARTNER'
      pensjoneringAldre: components['schemas']['PersonPensjoneringAldreV4']
    }
    AlderspensjonDetaljerV2: {
      /** Format: int32 */
      grad: number
      /** Format: date */
      fom: string
      sisteUtbetaling?: components['schemas']['UtbetalingV2']
    }
    LoependeFraV2: {
      /** Format: date */
      fom: string
    }
    LoependeVedtakV2: {
      alderspensjon?: components['schemas']['AlderspensjonDetaljerV2']
      harFremtidigLoependeVedtak: boolean
      ufoeretrygd: components['schemas']['UfoeretrygdDetaljerV2']
      afpPrivat?: components['schemas']['LoependeFraV2']
      afpOffentlig?: components['schemas']['LoependeFraV2']
    }
    UfoeretrygdDetaljerV2: {
      /** Format: int32 */
      grad: number
    }
    UtbetalingV2: {
      beloep: number
      /** Format: date */
      utbetalingsdato: string
    }
    PersonV2: {
      navn: string
      /** Format: date */
      foedselsdato: string
      /** @enum {string} */
      sivilstand:
        | 'UNKNOWN'
        | 'UOPPGITT'
        | 'UGIFT'
        | 'GIFT'
        | 'ENKE_ELLER_ENKEMANN'
        | 'SKILT'
        | 'SEPARERT'
        | 'REGISTRERT_PARTNER'
        | 'SEPARERT_PARTNER'
        | 'SKILT_PARTNER'
        | 'GJENLEVENDE_PARTNER'
    }
    EkskluderingStatusV2: {
      ekskludert: boolean
      /** @enum {string} */
      aarsak: 'NONE' | 'ER_APOTEKER'
    }
    LoependeVedtakDetaljerV1: {
      loepende: boolean
      /** Format: int32 */
      grad: number
      /** Format: date */
      fom?: string
    }
    LoependeVedtakV1: {
      alderspensjon: components['schemas']['LoependeVedtakDetaljerV1']
      ufoeretrygd: components['schemas']['LoependeVedtakDetaljerV1']
      afpPrivat: components['schemas']['LoependeVedtakDetaljerV1']
      afpOffentlig: components['schemas']['LoependeVedtakDetaljerV1']
    }
    UfoeregradDto: {
      /** Format: int32 */
      ufoeregrad: number
    }
    MedlemskapITjenestepensjonsordningDto: {
      tpLeverandoerListe: string[]
    }
    BrukerHarLoependeOmstillingsstoenadEllerGjenlevendeYtelse: {
      harLoependeSak: boolean
    }
    LandInfo: {
      landkode: string
      kravOmArbeid?: boolean
      bokmaalNavn: string
      nynorskNavn: string
      engelskNavn: string
    }
    EkskluderingStatusV1: {
      ekskludert: boolean
      /** @enum {string} */
      aarsak:
        | 'NONE'
        | 'HAR_LOEPENDE_UFOERETRYGD'
        | 'HAR_GJENLEVENDEYTELSE'
        | 'ER_APOTEKER'
    }
    AnsattV1: {
      id: string
    }
    TjenestepensjonsforholdDto: {
      harTjenestepensjonsforhold: boolean
    }
    ApiStatusDto: {
      status: string
    }
    SakDto: {
      harUfoeretrygdEllerGjenlevendeytelse: boolean
    }
    InntektDto: {
      /** Format: int32 */
      beloep: number
      /** Format: int32 */
      aar: number
    }
    EnablementDto: {
      enabled: boolean
    }
  }
  responses: never
  parameters: never
  requestBodies: never
  headers: never
  pathItems: never
}
export type $defs = Record<string, never>
export interface operations {
  simulerAlderspensjonV8: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['PersonligSimuleringSpecV8']
      }
    }
    responses: {
      /** @description Simulering utført */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          '*/*': components['schemas']['PersonligSimuleringResultV8']
        }
      }
      /** @description Simulering kunne ikke utføres av tekniske årsaker */
      503: {
        headers: {
          [name: string]: unknown
        }
        content: {
          '*/*': unknown
        }
      }
    }
  }
  simulerAlderspensjonV7: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['IngressSimuleringSpecV7']
      }
    }
    responses: {
      /** @description Simulering utført */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          '*/*': components['schemas']['SimuleringResultatV7']
        }
      }
      /** @description Simulering kunne ikke utføres av tekniske årsaker */
      503: {
        headers: {
          [name: string]: unknown
        }
        content: {
          '*/*': unknown
        }
      }
    }
  }
  fetchAvtalerV3: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['PensjonsavtaleSpecV3']
      }
    }
    responses: {
      /** @description Henting av pensjonsavtaler utført. I respons er verdi av 'maaneder' 0..11. */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          '*/*': components['schemas']['PensjonsavtaleResultV3']
        }
      }
      /** @description Henting av pensjonsavtaler kunne ikke utføres av tekniske årsaker */
      503: {
        headers: {
          [name: string]: unknown
        }
        content: {
          '*/*': unknown
        }
      }
    }
  }
  finnTidligsteHelUttaksalderV2: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['UttaksalderSpecV2']
      }
    }
    responses: {
      /** @description Søk etter uttaksalder utført. I resultatet er verdi av 'maaneder' 0..11. */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          '*/*': components['schemas']['UttaksalderResultV2']
        }
      }
      /** @description Søk etter uttaksalder kunne ikke utføres av tekniske årsaker */
      503: {
        headers: {
          [name: string]: unknown
        }
        content: {
          '*/*': unknown
        }
      }
    }
  }
  fetchAvtalerV2: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['PensjonsavtaleSpecV2']
      }
    }
    responses: {
      /** @description Henting av pensjonsavtaler utført. I respons er verdi av 'maaneder' 0..11. */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          '*/*': components['schemas']['PensjonsavtaleResultV2']
        }
      }
      /** @description Henting av pensjonsavtaler kunne ikke utføres av tekniske årsaker */
      503: {
        headers: {
          [name: string]: unknown
        }
        content: {
          '*/*': unknown
        }
      }
    }
  }
  finnTidligsteHelUttaksalderV1: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['IngressUttaksalderSpecForHeltUttakV1']
      }
    }
    responses: {
      /** @description Søk etter uttaksalder utført. I resultatet er verdi av 'maaneder' 0..11. */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          '*/*': components['schemas']['AlderDto']
        }
      }
      /** @description Søk etter uttaksalder kunne ikke utføres av tekniske årsaker */
      503: {
        headers: {
          [name: string]: unknown
        }
        content: {
          '*/*': unknown
        }
      }
    }
  }
  simulerOffentligTjenestepensjonV1: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['IngressSimuleringOffentligTjenestepensjonSpecV1']
      }
    }
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          '*/*': components['schemas']['OffentligTjenestepensjonSimuleringsresultatDtoV1']
        }
      }
    }
  }
  encrypt: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': string
      }
    }
    responses: {
      /** @description Kryptering utført */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          '*/*': string
        }
      }
      /** @description Kryptering kunne ikke utføres av tekniske årsaker */
      503: {
        headers: {
          [name: string]: unknown
        }
        content: {
          '*/*': unknown
        }
      }
    }
  }
  simulerAnonymAlderspensjonV1: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['AnonymSimuleringSpecV1']
      }
    }
    responses: {
      /** @description Simulering utført */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          '*/*': components['schemas']['AnonymSimuleringResultV1']
        }
      }
      /** @description Simulering kunne ikke utføres pga. feil i input-data */
      '4xx': {
        headers: {
          [name: string]: unknown
        }
        content: {
          '*/*': components['schemas']['AnonymSimuleringErrorV1']
        }
      }
    }
  }
  personV4: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Henting av personinformasjon utført. */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          '*/*': components['schemas']['PersonResultV4']
        }
      }
      /** @description Personen ble ikke funnet. */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          '*/*': components['schemas']['PersonResultV4']
        }
      }
      /** @description Henting av personinformasjon kunne ikke utføres av tekniske årsaker. */
      503: {
        headers: {
          [name: string]: unknown
        }
        content: {
          '*/*': unknown
        }
      }
    }
  }
  hentLoependeVedtakV2: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Henting av løpende vedtak utført */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          '*/*': components['schemas']['LoependeVedtakV2']
        }
      }
      /** @description Henting av løpende vedtak kunne ikke utføres av tekniske årsaker */
      503: {
        headers: {
          [name: string]: unknown
        }
        content: {
          '*/*': unknown
        }
      }
    }
  }
  personV2: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Henting av personinformasjon utført. */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          '*/*': components['schemas']['PersonV2']
        }
      }
      /** @description Personen ble ikke funnet. */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          '*/*': components['schemas']['PersonV2']
        }
      }
      /** @description Henting av personinformasjon kunne ikke utføres av tekniske årsaker. */
      503: {
        headers: {
          [name: string]: unknown
        }
        content: {
          '*/*': unknown
        }
      }
    }
  }
  erEkskludertV2: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Sjekking av ekskludering utført */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          '*/*': components['schemas']['EkskluderingStatusV2']
        }
      }
      /** @description Sjekking av ekskludering kunne ikke utføres av tekniske årsaker */
      503: {
        headers: {
          [name: string]: unknown
        }
        content: {
          '*/*': unknown
        }
      }
    }
  }
  hentLoependeVedtakV1: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Henting av løpende vedtak utført */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          '*/*': components['schemas']['LoependeVedtakV1']
        }
      }
      /** @description Henting av løpende vedtak kunne ikke utføres av tekniske årsaker */
      503: {
        headers: {
          [name: string]: unknown
        }
        content: {
          '*/*': unknown
        }
      }
    }
  }
  hentUfoeregrad: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Henting av uføregrad utført */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          '*/*': components['schemas']['UfoeregradDto']
        }
      }
      /** @description henting av uføregrad kunne ikke utføres av tekniske årsaker */
      503: {
        headers: {
          [name: string]: unknown
        }
        content: {
          '*/*': unknown
        }
      }
    }
  }
  hentMedlemskapITjenestepensjonsordninger: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          '*/*': components['schemas']['MedlemskapITjenestepensjonsordningDto']
        }
      }
    }
  }
  mottarOmstillingsstoenadEllerGjenlevendeYtelse: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Henting av omstillingsstønad eller gjenlevende ytelse utført. */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          '*/*': components['schemas']['BrukerHarLoependeOmstillingsstoenadEllerGjenlevendeYtelse']
        }
      }
      /** @description Henting av omstillingsstønad eller gjenlevende ytelse kunne ikke utføres av tekniske årsaker */
      503: {
        headers: {
          [name: string]: unknown
        }
        content: {
          '*/*': unknown
        }
      }
    }
  }
  landListe: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Henting av land-liste utført. */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          '*/*': components['schemas']['LandInfo'][]
        }
      }
      /** @description Henting av land-liste kunne ikke utføres av tekniske årsaker. */
      503: {
        headers: {
          [name: string]: unknown
        }
        content: {
          '*/*': unknown
        }
      }
    }
  }
  erEkskludertV1: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Sjekking av ekskludering utført */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          '*/*': components['schemas']['EkskluderingStatusV1']
        }
      }
      /** @description Sjekking av ekskludering kunne ikke utføres av tekniske årsaker */
      503: {
        headers: {
          [name: string]: unknown
        }
        content: {
          '*/*': unknown
        }
      }
    }
  }
  ansattId: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Henting av ansatt-ID utført. */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          '*/*': components['schemas']['AnsattV1']
        }
      }
      /** @description Henting av ansatt-ID kunne ikke utføres av tekniske årsaker. */
      503: {
        headers: {
          [name: string]: unknown
        }
        content: {
          '*/*': unknown
        }
      }
    }
  }
  harTjenestepensjonsforhold: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          '*/*': components['schemas']['TjenestepensjonsforholdDto']
        }
      }
    }
  }
  status: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          '*/*': components['schemas']['ApiStatusDto']
        }
      }
    }
  }
  harRelevantSak: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Sjekking av saker utført */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          '*/*': components['schemas']['SakDto']
        }
      }
      /** @description Sjekking av saker kunne ikke utføres av tekniske årsaker */
      503: {
        headers: {
          [name: string]: unknown
        }
        content: {
          '*/*': unknown
        }
      }
    }
  }
  sistePensjonsgivendeInntekt: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Henting av inntekt utført. */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          '*/*': components['schemas']['InntektDto']
        }
      }
      /** @description Henting av inntekt kunne ikke utføres av tekniske årsaker */
      503: {
        headers: {
          [name: string]: unknown
        }
        content: {
          '*/*': unknown
        }
      }
    }
  }
  isEnabled: {
    parameters: {
      query?: never
      header?: never
      path: {
        name: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Sjekking av funksjonsbryter-status */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          '*/*': components['schemas']['EnablementDto']
        }
      }
      /** @description Sjekking av funksjonsbryter-status kunne ikke utføres av tekniske årsaker */
      503: {
        headers: {
          [name: string]: unknown
        }
        content: {
          '*/*': unknown
        }
      }
    }
  }
}
