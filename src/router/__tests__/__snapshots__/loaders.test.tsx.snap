// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`Loaders > tpoMedlemskapAccessGuard > kaller redirect til /afp location når samtykke er oppgitt til false 1`] = `
Response {
  Symbol(realm): {
    "settingsObject": {},
  },
  Symbol(state): {
    "aborted": false,
    "cacheState": "",
    "headersList": HeadersList {
      "cookies": null,
      Symbol(headers map): Map {
        "location" => {
          "name": "location",
          "value": "/afp",
        },
      },
      Symbol(headers map sorted): null,
    },
    "rangeRequested": false,
    "requestIncludesCredentials": false,
    "status": 302,
    "statusText": "",
    "timingAllowPassed": false,
    "timingInfo": null,
    "type": "default",
    "urlList": [],
  },
  Symbol(headers): Headers {
    Symbol(guard): "response",
    Symbol(headers list): HeadersList {
      "cookies": null,
      Symbol(headers map): Map {
        "location" => {
          "name": "location",
          "value": "/afp",
        },
      },
      Symbol(headers map sorted): null,
    },
    Symbol(realm): {
      "settingsObject": {},
    },
  },
}
`;

exports[`Loaders > tpoMedlemskapAccessGuard > kaller redirect til /start location når samtykke er null 1`] = `
Response {
  Symbol(realm): {
    "settingsObject": {},
  },
  Symbol(state): {
    "aborted": false,
    "cacheState": "",
    "headersList": HeadersList {
      "cookies": null,
      Symbol(headers map): Map {
        "location" => {
          "name": "location",
          "value": "/start",
        },
      },
      Symbol(headers map sorted): null,
    },
    "rangeRequested": false,
    "requestIncludesCredentials": false,
    "status": 302,
    "statusText": "",
    "timingAllowPassed": false,
    "timingInfo": null,
    "type": "default",
    "urlList": [],
  },
  Symbol(headers): Headers {
    Symbol(guard): "response",
    Symbol(headers list): HeadersList {
      "cookies": null,
      Symbol(headers map): Map {
        "location" => {
          "name": "location",
          "value": "/start",
        },
      },
      Symbol(headers map sorted): null,
    },
    Symbol(realm): {
      "settingsObject": {},
    },
  },
}
`;

exports[`Loaders > tpoMedlemskapAccessGuard > kaller tp-registret når samtykke er oppgitt til true 1`] = `
DeferredData {
  "abortPromise": Promise {},
  "controller": AbortController {
    Symbol(SameObject caches): {
      "signal": AbortSignal {},
    },
  },
  "data": {
    "getTpoMedlemskapQuery": Promise {},
  },
  "deferredKeys": [
    "getTpoMedlemskapQuery",
  ],
  "init": {},
  "pendingKeysSet": Set {
    "getTpoMedlemskapQuery",
  },
  "subscribers": Set {},
  "unlistenAbortSignal": [Function],
}
`;
