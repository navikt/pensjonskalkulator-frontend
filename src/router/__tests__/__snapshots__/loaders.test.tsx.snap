// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`Loaders > stepAFPAccessGuard > returnerer redirect til /start location når ingen api kall er registrert 1`] = `
Response {
  Symbol(state): {
    "aborted": false,
    "cacheState": "",
    "headersList": HeadersList {
      "cookies": null,
      Symbol(headers map): Map {
        "location" => {
          "name": "location",
          "value": "/start",
        },
      },
      Symbol(headers map sorted): null,
    },
    "rangeRequested": false,
    "requestIncludesCredentials": false,
    "status": 302,
    "statusText": "",
    "timingAllowPassed": false,
    "timingInfo": null,
    "type": "default",
    "urlList": [],
  },
  Symbol(headers): Headers {},
}
`;

exports[`Loaders > stepSamtykkeOffentligAFPAccessGuard > Når brukeren har uføretrygd og har valgt ja_offentlig til spørsmål om afp, er hen redirigert 1`] = `
Response {
  Symbol(state): {
    "aborted": false,
    "cacheState": "",
    "headersList": HeadersList {
      "cookies": null,
      Symbol(headers map): Map {
        "location" => {
          "name": "location",
          "value": "/samtykke",
        },
      },
      Symbol(headers map sorted): null,
    },
    "rangeRequested": false,
    "requestIncludesCredentials": false,
    "status": 302,
    "statusText": "",
    "timingAllowPassed": false,
    "timingInfo": null,
    "type": "default",
    "urlList": [],
  },
  Symbol(headers): Headers {},
}
`;

exports[`Loaders > stepSamtykkeOffentligAFPAccessGuard > Når brukeren ikke har uføretrygd og har valgt afp nei, er hen redirigert 1`] = `
Response {
  Symbol(state): {
    "aborted": false,
    "cacheState": "",
    "headersList": HeadersList {
      "cookies": null,
      Symbol(headers map): Map {
        "location" => {
          "name": "location",
          "value": "/samtykke",
        },
      },
      Symbol(headers map sorted): null,
    },
    "rangeRequested": false,
    "requestIncludesCredentials": false,
    "status": 302,
    "statusText": "",
    "timingAllowPassed": false,
    "timingInfo": null,
    "type": "default",
    "urlList": [],
  },
  Symbol(headers): Headers {},
}
`;

exports[`Loaders > stepSamtykkeOffentligAFPAccessGuard > returnerer redirect til /start location når ingen api kall er registrert 1`] = `
Response {
  Symbol(state): {
    "aborted": false,
    "cacheState": "",
    "headersList": HeadersList {
      "cookies": null,
      Symbol(headers map): Map {
        "location" => {
          "name": "location",
          "value": "/start",
        },
      },
      Symbol(headers map sorted): null,
    },
    "rangeRequested": false,
    "requestIncludesCredentials": false,
    "status": 302,
    "statusText": "",
    "timingAllowPassed": false,
    "timingInfo": null,
    "type": "default",
    "urlList": [],
  },
  Symbol(headers): Headers {},
}
`;

exports[`Loaders > stepSivilstandAccessGuard > returnerer redirect til /start location når ingen api kall er registrert 1`] = `
Response {
  Symbol(state): {
    "aborted": false,
    "cacheState": "",
    "headersList": HeadersList {
      "cookies": null,
      Symbol(headers map): Map {
        "location" => {
          "name": "location",
          "value": "/start",
        },
      },
      Symbol(headers map sorted): null,
    },
    "rangeRequested": false,
    "requestIncludesCredentials": false,
    "status": 302,
    "statusText": "",
    "timingAllowPassed": false,
    "timingInfo": null,
    "type": "default",
    "urlList": [],
  },
  Symbol(headers): Headers {},
}
`;

exports[`Loaders > stepStartAccessGuard > kaller getPersonQuery, getLoependeVedtakQuery, getInntekt, getOmstillingsstoenadOgGjenlevende og getEkskludertStatus og returnerer en defered response med getPerson og en redirect url 1`] = `
{
  "getLoependeVedtakQuery": Promise {
    "abort": [Function],
    "arg": undefined,
    "queryCacheKey": "getLoependeVedtak(undefined)",
    "refetch": [Function],
    "requestId": "TOrZ-P_psQ3z6oTELFDkH",
    "subscriptionOptions": undefined,
    "unsubscribe": [Function],
    "unwrap": [Function],
    "updateSubscriptionOptions": [Function],
  },
  "getPersonQuery": Promise {
    "abort": [Function],
    "arg": undefined,
    "queryCacheKey": "getPerson(undefined)",
    "refetch": [Function],
    "requestId": "f6O1-t7uxgdRl1_HfyyHh",
    "subscriptionOptions": undefined,
    "unsubscribe": [Function],
    "unwrap": [Function],
    "updateSubscriptionOptions": [Function],
  },
  "shouldRedirectTo": Promise {},
}
`;

exports[`Loaders > stepUfoeretrygdAFPAccessGuard > Gitt at brukeren har uføretrygd,  > Når hen er fylt minimum uttaksalder, er hen redirigert 1`] = `
Response {
  Symbol(state): {
    "aborted": false,
    "cacheState": "",
    "headersList": HeadersList {
      "cookies": null,
      Symbol(headers map): Map {
        "location" => {
          "name": "location",
          "value": "/samtykke-offentlig-afp",
        },
      },
      Symbol(headers map sorted): null,
    },
    "rangeRequested": false,
    "requestIncludesCredentials": false,
    "status": 302,
    "statusText": "",
    "timingAllowPassed": false,
    "timingInfo": null,
    "type": "default",
    "urlList": [],
  },
  Symbol(headers): Headers {},
}
`;

exports[`Loaders > stepUfoeretrygdAFPAccessGuard > Når brukeren ikke har uføretrygd, er hen redirigert 1`] = `
Response {
  Symbol(state): {
    "aborted": false,
    "cacheState": "",
    "headersList": HeadersList {
      "cookies": null,
      Symbol(headers map): Map {
        "location" => {
          "name": "location",
          "value": "/samtykke-offentlig-afp",
        },
      },
      Symbol(headers map sorted): null,
    },
    "rangeRequested": false,
    "requestIncludesCredentials": false,
    "status": 302,
    "statusText": "",
    "timingAllowPassed": false,
    "timingInfo": null,
    "type": "default",
    "urlList": [],
  },
  Symbol(headers): Headers {},
}
`;

exports[`Loaders > stepUfoeretrygdAFPAccessGuard > returnerer redirect til /start location når ingen api kall er registrert 1`] = `
Response {
  Symbol(state): {
    "aborted": false,
    "cacheState": "",
    "headersList": HeadersList {
      "cookies": null,
      Symbol(headers map): Map {
        "location" => {
          "name": "location",
          "value": "/start",
        },
      },
      Symbol(headers map sorted): null,
    },
    "rangeRequested": false,
    "requestIncludesCredentials": false,
    "status": 302,
    "statusText": "",
    "timingAllowPassed": false,
    "timingInfo": null,
    "type": "default",
    "urlList": [],
  },
  Symbol(headers): Headers {},
}
`;
